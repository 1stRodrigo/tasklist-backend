// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//create a migration: yarn prisma migrate dev
model User {
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
  tasks Task[]
  tags Tag[]
}

model Task {
  id String @id @default(uuid())
  title String
  description String?
  status TaskStatus @default(PENDING)
  priority TaskPriority @default(MEDIUM)
  due_date String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  
  user User @relation(fields: [authorId], references: [id])
  authorId String
  
  @@map("tasks")
  tags TaskTag[]

}

model Tag {
  id String @id @default(uuid())
  name String

  user User @relation(fields: [userId], references: [id]) 
  userId String

  @@map("tags")
  tasks TaskTag[]

  
}

model TaskTag {
   
   task Task @relation(fields: [taskId], references: [id])
   taskId String

   tag Tag @relation(fields: [tagId], references: [id])
   tagId String

   @@id([taskId, tagId]) //Defines Clustered Primary Key 
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW 
  MEDIUM
  HIGH
}